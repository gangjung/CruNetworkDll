명령이 여러개가 동시에 올 수 있지 않나?


투사체로 적을 공격할 때, 

흠...

unity로 서버를 만든다면...


메시지 작성은 서버에서. 네트워크 Thread는 건들지 말 것.


통신 레이턴시를 줄이려면, 데이터 처리부분의 오버헤드를 줄여야 한다.


receive나 send는 Queue에 쌓이면 바로 전송한다.

Thread를 풀어주는 control.

Send는 

메시지 처리하는데 Queue에 들어올 수 있다.

Receive는 계속해서 받는데로 메시지큐를 만들어서 중앙 서버로 보내야한다.
어디서든 한 번 바꿔줘야 한다... 빠른 처리가 문제.


1. 소켓이 끊기면 어떻게 할거냐?? - 일단 가능성이 낮으니 나중에 처리.
2. 

<해야할 일>
코드작업 마무리하고, 동기서버를 만들어서 실제로 클라이언트 사용하고 끊어보기.

네트워크 상태를 확인하기 위한 명령어도 설정해 놔야 한다.

온라인게임에서 join 써서 thread종료를 기다려줘야하나?

----------------
만들면서 공부한 것들을 주석으로라도 괜찮으니 정리해보자.

게임 패킷 암호화도 중요

1. Json안씀! -> 변환하는데 더 연산이 많을거 같음(늦을거같음). 그냥 String 잘라서 쓸거임.
2. 타입에 따라 고정 데이터사이즈 사용할거임! -> 고정이 데이터 변환할 때, 더 빠를거 같음. 왜냐하면 사이즈를 알아서 그만큼 처리해주지 않아도 되니까.
고정을쓰면 낭비되는 통신량이 있기에 문제가 생길 수 있겠지만, 일단 고정으로 가보자. 고정으로 한 다음, 가변으로 바꿔서, 서버에서 처리 가능한지 확인해보는 것으로 하자!!!